<?xml version="1.0" encoding="UTF-8"?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Computer Vision</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Sira Palazuelos, Miguel Angel Garcia, Juan Manuel Miguel. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>  Departamento de Electrónica. Universidad de Alcalá. SPAIN.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Student(s):</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Date:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Topic 2. Geometric corrections </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>To correct the effect of geometric transformations we must calculate the matrix that allows us to change the position of the input pixels and place them in the correct/undistorted output positions. In Matlab, the function we use for this is es </w:t></w:r><w:hyperlink w:docLocation="https://www.mathworks.com/help/releases/R2023a/vision/ref/estgeotform2d.html?browser=F1help#d124e211773?browser=F1help"><w:r><w:rPr><w:rFonts w:cs="monospace"/></w:rPr><w:t>tform = estgeotform2d(matchedPoints1,matchedPoints2,transformType)</w:t></w:r></w:hyperlink><w:r><w:rPr><w:rFonts w:cs="monospace"/></w:rPr><w:t>,</w:t></w:r><w:r><w:t> which estimates the matrix necessary to match the </w:t></w:r><w:r><w:rPr><w:rFonts w:cs="monospace"/></w:rPr><w:t>matchedPoints1</w:t></w:r><w:r><w:t> of the input image with the </w:t></w:r><w:r><w:rPr><w:rFonts w:cs="monospace"/></w:rPr><w:t>matchedPoints2</w:t></w:r><w:r><w:t> of the output image. In this exercise, we will provide you as a variable the values of matchedPoints2 where the pixels of the output image should be located after the transformation.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Rotation correction</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>To calculate the matrix necessary to correct a rotated image (with or without scaling) we only need 2 points. In this case we will select the two furthest points  from the rings of Saturn and the code is prepared to rotate them and place them horizontally.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[clc
clear all;
close all;

% Read original image.
I = imread('saturn.tif');
% NOTE: impixel 
% Use normal button clicks to select pixels. 
% Press Backspace or Delete to remove the previously selected pixel. 
% To add a final pixel and finish pixel selection in one step, press shift-click, or right-click or double-click. 
% To finish selecting pixels without adding a final pixel, press Return.
figure
[x, y, P] = impixel(I);
srcPoints = [x y]
dstPoints = [100 100; ...
            300 100]; % Location of the ends of the rings so that they are horizontal
[tform,inlierIndex,status] = estgeotform2d(srcPoints, dstPoints,'similarity')
destino = imwarp(I,tform);
figure; imshow(destino);]]></w:t></w:r></w:p><w:p><w:pPr><w:sectPr/></w:pPr></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Modify the values of the destination points so that the final image is in a different orientation and display it.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[dstPoints = [];
]]></w:t></w:r></w:p><w:p><w:pPr><w:sectPr/></w:pPr></w:p><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Perspective Correction with Homography</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>To correct the perspective of an object it is necessary to estimate the perspective transformation. Four pairs of corresponding points are sufficient to recover a perspective transformation between two images. The objective of this practice is to correct the perspective of the card in the image "</w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>card.jpg</w:t></w:r><w:r><w:t>",</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>It is requested: </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Read the image "</w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>card.jpg</w:t></w:r><w:r><w:t>". Click on the four corners of the card to get the first four points using the </w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>impixel</w:t></w:r><w:r><w:t> function. Note: Use the following order to obtain the four points: 1) Top left corner, 2) Top right corner, 3) Bottom right corner, 4) Bottom left corner.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Calculate the four points of the poker card without perspective distortion, taking into account that a poker card has a size of approximately 100 mm by 150 mm..</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Estimate the perspective transformation using the </w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>estgeotform2d</w:t></w:r><w:r><w:t> function knowing that in this case the transformation type is "</w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>projective</w:t></w:r><w:r><w:t>"</w:t></w:r><w:r><w:rPr><w:rFonts w:cs="monospace"/></w:rPr><w:t>.</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:cs="monospace"/></w:rPr><w:t> </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Apply the perspective transformation using the </w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>imwarp</w:t></w:r><w:r><w:t> function.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Show the undistorted card.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[]]></w:t></w:r></w:p></w:body></w:document>