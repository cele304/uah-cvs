<?xml version="1.0" encoding="UTF-8"?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Computer Vision</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Lab 3. Image Segmentation</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>  Departamento de Electrónica. Universidad de Alcalá.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="center"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Students: Filip Ćelepirović, Helena Potočki</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Date: 11.11.2023.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="center"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>The main objective of this practice is to become familiar with image segmentation techniques:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>From simple levels that require intervention by the user (supervised segmentation) to set thresholds, establish model parameters, etc., to more complex levels that work automatically or semi-automatically (unsupervised segmentation).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>From techniques based on the histogram, clustering techniques (in regions) and edge techniques. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Based on linear and non-linear classification methods of each pixel of the image in the corresponding region.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t> Throughout the practice you will be asked to: </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Apply some of the studied segmentation techniques in a practical way, verifying their problems and limitations.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Compare some segmentation techniques with others, analyzing their percentage of success.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Distinguish supervised vs unsupervised segmentation.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Differentiate segmentation based on linear versus non-linear techniques.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t> As in the previous practice, once the proposed activities have been completed, a report will be delivered, made on this same file, that it includes for each exercise:  </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Original image/Processed image/requested data.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Intermediate images (if they exist and are of interest).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Code.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Explanation of the code and justification/conclusions on the result obtained.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>It will be valued positively: the expansion of the memory with the explanations that you consider appropriate, additional tests (modifying parameters, using other images that highlight some effect of the processing, etc.), description of problems that arose in the execution of the practice and solution provided, etc. Perform each exercise as an independent section, viewing the results together with a subplot when appropriate, and inserting instructions to close windows (close all), remove variables from the workspace (clear all), and pause (pause), where necessary. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>The delivery will be made in the Virtual Classroom of the subject: Contents --&gt; Labs --&gt; Lab 3. Report</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Suggested exercises:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t> 1. Linear Supervised Histogram-based Segmentation:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Open the image "pimientos.jpg".</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Convert it to grayscale image.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Get and display grayscale image histogram.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>In view of the histogram, use as many thresholds as necessary and the appropriate values to segment each of the objects in the image. You can enter them with a slider (</w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>numeric slider</w:t></w:r><w:r><w:t>) or by requesting them at the Matlab prompt with the instruction: threshold = input('Enter threshold value X in view of the histogram figure '). </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Display the segmentation (either with objects of different colors in the same image, or using a different image for each object).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Is it easy to segment the different objects? Justify your answer.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Try to improve the result based on the color image and/or its different components.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[% Exercise 1: Linear Supervised Histogram-based Segmentation

% Step 1: Load the image
originalImage = imread('pimientos.jpg');

% Step 2: Convert to grayscale
grayImage = rgb2gray(originalImage);

% Step 3: Display grayscale image histogram
figure;
imhist(grayImage);
title('Grayscale Image Histogram');



% Step 4: Segment the image based on user-defined thresholds
numObjects = input('Enter the number of objects in the image: ');

% Initialize an array to store segmentation results
segmentedImages = cell(1, numObjects);

% Loop through each object and set threshold interactively
for i = 1:numObjects
    threshold = input('Enter threshold value for segmentation: ');
    
    % Apply thresholding
    binaryImage = grayImage > threshold;
    
    % Store the segmented image
    segmentedImages{i} = binaryImage;
end



% Step 5: Display the segmented images
figure;
for i = 1:numObjects
    subplot(1, numObjects, i);
    imshow(segmentedImages{i});
    title(['Segmented Object ' num2str(i)]);
end




% Step 6: Provide justification and potential improvements
disp('It might be easy or difficult to segment different objects based on the image content.');
disp('Justification: ...'); % Add your justification here

% Additional tests or improvements based on the color image or its components can be added here.
]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>2. Linear unsupervised segmentation:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Threshold</w:t></w:r><w:r><w:t> the image "eight.tif" with the </w:t></w:r><w:r><w:rPr><w:b/><w:i/></w:rPr><w:t>imbinarize</w:t></w:r><w:r><w:t> function, using a global threshold previously calculated with Matlab's </w:t></w:r><w:r><w:rPr><w:b/><w:i/></w:rPr><w:t>graythresh</w:t></w:r><w:r><w:t> function (unsupervised method: it does not require the user's observation of the histogram, nor the choice of thresholds from it): </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>                    *   The </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>graythresh</w:t></w:r><w:r><w:t> function uses the Otsu method to choose the global segmentation threshold, minimizing the variance within the elements of the classes and maximizing it between classes.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>                    *  The </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>imbinarize</w:t></w:r><w:r><w:t> function thresholds grayscale images. If the original image is in color, it is necessary to previously transform it to grayscale with the corresponding function depending on its format (</w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>rgb2gray</w:t></w:r><w:r><w:t>, etc...).  </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>                         level = graythresh(I);</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>                         BW = </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>imbinarize</w:t></w:r><w:r><w:t>(I,level);</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>                         figure, imshow(BW)</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Does unsupervised segmentation work correctly with image "eigth.tif"? Why?</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="1"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Try other Matlab images with histograms of different shapes. Does </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>graythresh</w:t></w:r><w:r><w:t> correctly segment the images in all cases? If not, with what type of images does it usually work best/worst?</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>3. Compare the two previous sections: supervised versus unsupervised linear segmentation, indicating advantages and disadvantages of each.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t> </w:t></w:r><w:r><w:t> </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>4. Edge-based segmentation:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Open image "coins.png".</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Detect edges using the Canny filter. Use </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>numeric sliders</w:t></w:r><w:r><w:t> to configure the various parameters and visualize the effect of the different settings. Comment on the effects on the edges of changing each parameter.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Close contours by dilating the obtained edges (</w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>imdilate</w:t></w:r><w:r><w:t>). View results.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Fill the obtained contours (</w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>imfill</w:t></w:r><w:r><w:t>).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Label the different objects with </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>bwlabel</w:t></w:r><w:r><w:t> and show the final result.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Repeat steps 1 to 5 using the </w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:cs="monospace"/></w:rPr><w:t>'sobel'</w:t></w:r><w:r><w:t> mask and compare the results (canny - sobel).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Repeat steps 1 to 5 and compare the results with or without dilation (step 3). Justify your answer.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Compare the results obtained when using different structuring elements in the dilation. Justify your answer.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Compare the results by performing a dilation (</w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>imdilate</w:t></w:r><w:r><w:t>) versus a closure (</w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>imclose</w:t></w:r><w:r><w:t>). Justify your answer.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>5. Line detection using the Hough transform:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Using the Hough transform, draw the 7 longest lines in the image 'despacho1.jpg'. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Verify the effect of the 'FillGap' and 'MinLength' parameters by modifying their value (for example, using sliders) and viewing the result. Comment on its effect on the detected lines.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Calculate the number of peaks (</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:cs="monospace"/></w:rPr><w:t>length(P)</w:t></w:r><w:r><w:t>) and the number of lines (</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:cs="monospace"/></w:rPr><w:t>length(lines)</w:t></w:r><w:r><w:t>) obtained. Are they the same or different? Why?</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>6. Circle detection using the Hough transform:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Using the Hough transform, locate and draw the contour of the cells in the '</w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>blood1.tif</w:t></w:r><w:r><w:t>' image whose radius is between 7 and 20 pixels. If necessary, consider thresholding the image and/or inverting it before applying the transform.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Highlight the largest cell using a different color.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>How many cells did you find?</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>7. Watershed Transform:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:numId w:val="2"/></w:numPr><w:jc w:val="left"/></w:pPr><w:r><w:t>Load the image '</w:t></w:r><w:r><w:rPr><w:b/></w:rPr><w:t>circles.png</w:t></w:r><w:r><w:t>', threshold it and perform segmentation using the Watershed transform. Is there over-segmentation, that is, are there many more segmented objects  than there are in the original image? If so, try to reduce it (using, for example, morphological operators).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>Optional</w:t></w:r><w:r><w:t>. Non-linear thresholding, for more that 2 classes. Consider that images of any size and type (indexed, color and in gray levels) can be read, which will always be converted to grayscale first.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>    8. </w:t></w:r><w:r><w:t>Implement a program that performs supervised segmentation by Gaussian models (nonlinear) for more than two classes. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t>    9. </w:t></w:r><w:r><w:t>Implement a program that performs unsupervised segmentation by Gaussian models (nonlinear) for more than two classes. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:rPr><w:b/></w:rPr><w:t></w:t></w:r></w:p></w:body></w:document>